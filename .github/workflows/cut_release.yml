name: Pre-Release Notes & Merge

on:
  workflow_dispatch: # Manual trigger

jobs:
  generate-notes-and-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history is available for release notes

      - name: Generate Release Notes
        id: release_notes
        env:
          NAME_MAPPING: ${{ secrets.NAME_MAPPING }}
        run: |
          # Convert GitHub Secrets into an associative array
          declare -A NAME_MAP
          while IFS="=" read -r key value; do
          NAME_MAP["$key"]="$value"
          done <<< "$NAME_MAPPING"
          
          # Generate Release Notes
          NOTES=$(git log origin/production..origin/master --pretty="«%s»¦«%aN»¦%b" | \
          grep 'Merge pull request #[0-9]' | \
          sed -E 's/«Merge pull request #([0-9]+).*»¦«([^»]+)»¦(.*)/- [\3](https:\/\/github.com\/hicommonwealth\/commonwealth\/pull\/\1) @\2/' | \
          tr '\n' '\n')
  
          # Perform name replacements using NAME_MAP
          for KEY in "${!NAME_MAP[@]}"; do
          NOTES=$(echo "$NOTES" | sed "s/$KEY/${NAME_MAP[$KEY]}/g")
          done
      
          # Save the updated notes
          echo "NOTES<<EOF" >> $GITHUB_ENV
          echo "$NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Send to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_RELEASE_WEBHOOK_URL }}
        run: |
          if [ -n "$NOTES" ]; then
            PAYLOAD=$(jq -n --arg text "Pre-Release Notes:\nIf you are mentioned :thumbsup: after you have tested your changes on [beta.commonwealth.im](https://beta.common.im)\n\n$NOTES" '{text: $text}')
            curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" $SLACK_WEBHOOK_URL
          else
            echo "No new merge commits found."
          fi

      - name: Merge master into beta
        run: |
          git fetch origin
          git push --force origin master:beta